-- Code created by Kwik - Copyright: kwiksher.com -- Version: 2.4.6 module(..., package.seeall) function new()     local numPages = 330     local menuGroup = display.newGroup()     local dispose     local _W = display.contentWidth;     local _H = display.contentHeight;     -- Audio callings     local HeyDiddle64 =  audio.loadStream( audioDir.."heydiddle64.mp3")     local drawScreen = function()        local curPage = 1        if (kBookmark == 1) then           local path = system.pathForFile( "book.txt", system.DocumentsDirectory )           local file = io.open( path, "w+" )           file:write ( curPage.."\n1" )           io.close( file )        end        math.randomseed(os.time())        if (kAutoPlay > 0) then           local function act_autoPlay(event)              if(curPage < numPages) then                 if(kBidi == false) then                     dispose(); director:changeScene( "page_"..curPage+1, "moveFromRight" )                 else                     dispose(); director:changeScene( "page_"..curPage-1, "moveFromLeft" )                 end               end           end           timerStash.timer_AP = timer.performWithDelay( kAutoPlay*1000, act_autoPlay, 1 )        end         -- Button names        local pagen       local Cright       local but_introshow_998       -- Layer names        local Layer1         local pagen         local kwkBforward         local introshow         -- (TOP) External code will render here        -- Layer1 positioning        Layer1 = display.newImageRect( imgDir.. "p1_layer1.png", 768, 1024 );        Layer1.x = 384; Layer1.y = 512; Layer1.alpha = 1; Layer1.oldAlpha = 1        Layer1.oriX = Layer1.x; Layer1.oriY = Layer1.y        Layer1.name = "Layer1"        menuGroup:insert(1,Layer1); menuGroup.Layer1 = Layer1        -- pagen positioning        pagen = display.newImageRect( imgDir.. "p1_pagen.png", 71, 80 );        pagen.x = 732; pagen.y = 984; pagen.alpha = 1; pagen.oldAlpha = 1        pagen.oriX = pagen.x; pagen.oriY = pagen.y        pagen.name = "pagen"        menuGroup:insert(pagen); menuGroup.pagen = pagen        -- kwkBforward positioning        kwkBforward = display.newImageRect( imgDir.. "kwkbforward.png", 111, 87 );        kwkBforward.x = 475; kwkBforward.y = 971; kwkBforward.alpha = 1; kwkBforward.oldAlpha = 1        kwkBforward.oriX = kwkBforward.x; kwkBforward.oriY = kwkBforward.y        kwkBforward.name = "kwkBforward"        menuGroup:insert(kwkBforward); menuGroup.kwkBforward = kwkBforward        -- introshow positioning        introshow = display.newImageRect( imgDir.. "p1_introshow.png", 498, 510 );        introshow.x = 309; introshow.y = 654; introshow.alpha = 1; introshow.oldAlpha = 1        introshow.oriX = introshow.x; introshow.oriY = introshow.y        introshow.name = "introshow"        menuGroup:insert(introshow); menuGroup.introshow = introshow         -- Group(s) creation        -- (MIDDLE) External code will render here        -- Button event listeners        local function onpagenEvent(event)           pagen(pagen)           return true        end        pagen:addEventListener("tap", onpagenEvent )        local function onkwkBforwardEvent(event)           Cright(kwkBforward)           return true        end        kwkBforward:addEventListener("tap", onkwkBforwardEvent )        local function onintroshowEvent(event)           but_introshow_998(introshow)           return true        end        introshow:addEventListener("tap", onintroshowEvent )        -- Button functions        function pagen(self)             local myClosure_switch = function()                 dispose(); director:changeScene( "page_2", "fade" )             end             timerStash.newTimer_976 = timer.performWithDelay(0, myClosure_switch, 1)        end        function Cright(self)             local myClosure_switch = function()                 dispose(); director:changeScene( "page_2", "moveFromRight" )             end             timerStash.newTimer_976 = timer.performWithDelay(0, myClosure_switch, 1)        end        function but_introshow_998(self)             transitionStash.newTransition_977 = transition.to( introshow, {alpha=0, time=1000, delay=0})        end        -- swipe this page with spacer of 120 in normal direction        Gesture.activate( Layer1, {swipeLength=120} )        local function pageSwap(event )          if event.phase == "ended" and event.direction ~= nil then              local wPage = curPage              local direction              if event.direction == "left" and kBidi == false then                 wPage = curPage + 1                 if wPage > numPages then wPage = curPage end                 direction = "moveFromRight"              elseif event.direction == "left" and kBidi == true then                 wPage = curPage - 1                 if wPage < initPage then wPage = initPage end                 direction = "moveFromLeft"              elseif event.direction == "right" and kBidi == true then                 wPage = curPage + 1                 if wPage > numPages then wPage = curPage end                 direction = "moveFromRight"              elseif event.direction == "right" and kBidi == false then                 wPage = curPage - 1                 if wPage < initPage then wPage = initPage end                 direction = "moveFromLeft"              end              if wPage ~= curPage then dispose();                dispose(); director:changeScene("page_"..wPage, direction)             end          end         end        Layer1:addEventListener( Gesture.SWIPE_EVENT, pageSwap )        dispose = function(event)           cancelAllTimers(); cancelAllTransitions()           audio.stop(32); audio.dispose(HeyDiddle64); HeyDiddle64 = nil           Layer1:removeEventListener( Gesture.SWIPE_EVENT, pageSwap ); Gesture.deactivate(Layer1)        end        -- (BOTTOM) External code will render here     end     drawScreen()     local myClosure_HeyDiddle64 = function()        audio.setVolume(0, { channel=32} );        audio.play(HeyDiddle64, {  channel=32, loops=0, fadein=500 } )     end     timerStash.newTimer_872 = timer.performWithDelay(0, myClosure_HeyDiddle64, 1)     return menuGroup end 