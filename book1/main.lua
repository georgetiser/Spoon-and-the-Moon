-- Coded and developed by George Tiser.-- Modifies/uses book materials and code originally produced by Kwik for Adobe Photoshop - Developed by Kwiksher. Copyright (C) 2012 kwiksher.com. All Rights Reserved. Exported on Wed Jun 12 2013 14:36:36 GMT-0400.-- Uses Director class, by Ricardo Rauber/Jonathan Beebe -- Exported on Wed Jun 12 2013 14:36:36 GMT-0400-- uses gTween class, by Josh Tynjala (modified by Kwiksher) ---- v.2015 formatted, coded and developed by George Tiser_G.kwk_readMe = 0 _G.kwk_firstPage = 1_G.kwk_currentPage = 1_G.kwk_menuPage = 2_G.kwk_lastPage = 118_G.kwk_creditsPage = 118_G.kwk_firstPageOfChapter = {3, 25, 47, 60, 70, 88, 99, 115, 118}-- The second-to-last 'chapter' above is the sneak preview for Part II.-- The last 'chapter' above is the credits page.local environment = system.getInfo( "environment" )if environment == "simulator" then	statusreport = require("gt_debug")	_G.kwk_ShowDebugOutput = 1	statusreport.debugPrint(environment)else	_G.kwk_ShowDebugOutput = nil -- use nil to turn off, or 1 to activate (print statements)	statusreport = require("gt_nodebug")end_G.kwk_DebugBuildVersion = "15-09-16/cA"-- Set directories where to find files.imageDir = "images/" audioDir = "audio/" videoDir = "" -- cannot be usedspriteDir = "" -- doesn't get used-- Set defaults.defaultTransparentImage = imageDir .. "transparentbutton.png"defaultNavigation = {	defaultBackButton = {		category = "navigation button",		id = "NavigationButtonBack",		imageFile = imageDir .. "kwkBback.png",		alpha = 1,		width = 111,		height = 88,		x = 290,		y = 975,		transitionEffect = "moveFromLeft",		touchSound = "click.mp3",	},	defaultForwardButton = {		category = "navigation button",		id = "NavigationButtonForward",		imageFile = imageDir .. "kwkBforward.png",		alpha = 1,		width = 111,		height = 88,		x = 475,		y = 975,		transitionEffect = "moveFromRight",		touchSound = "click.mp3",	},	defaultMenuButton = {		category = "navigation button",		id = "NavigationButtonMenu",		imageFile = imageDir .. "kwkBindex.png",		alpha = 1,		width = 66,		height = 69,		x = 383,		y = 969,		transitionEffect = "overFromTop",		imageFile = imageDir .. "kwkBindex.png",		touchSound = audioDir .. "indexflip.mp3",	},	defaultPageCornerButton = {		category = "navigation button",		id = "NavigationButtonCorner",		imageFile = imageDir .. "PageCornerGrey.png",		alpha = 1,		width = 72,		height = 80,		x = 732,		y = 984,		transitionEffect = "fade",		touchSound = "click.mp3",	},	defaultPageNumberText = {		category = "text",		alpha = 1, -- doesn't get used		width = 72,		height = 80,		x1d = 744,		x2d = 737,		x3d = 730,		x = 752,		xOffset = 8,		y = 995,		fontname = "Arbutus Slab",		fontsize = 20,		id = "NavigationPageNumber",	},	navigationScheme = "Standard",}-- Lists lua files containing definitions we need.director = require("director") --Gesture = require("dmc_gesture") --MultiTouch = require("dmc_multitouch") --system.activate("multitouch") json = require("json") ui = require("ui")uii = require("uii")navigation = require("gt_navigation")soundeffects = require("gt_sound")local gtween = require("gtween") Gesture = require("dmc_gesture") MultiTouch = require("dmc_multitouch") system.activate("multitouch") if _G.kwk_ShowDebugOutput then	local chaps	chaps = "Chapters set"	statusreport.debugPrint("");statusreport.debugPrint("");statusreport.debugPrint("");statusreport.debugPrint("");statusreport.debugPrint("");statusreport.debugPrint("")	statusreport.debugPrint("Global page data initialized.");statusreport.debugPrint("Build Version: " .. _G.kwk_DebugBuildVersion);statusreport.debugPrint("");	statusreport.debugPrint("_G.kwk_currentPage: " .. _G.kwk_currentPage);statusreport.debugPrint("_G.kwk_menuPage: " .. _G.kwk_menuPage);statusreport.debugPrint("_G.kwk_lastPage: " .. _G.kwk_lastPage);statusreport.debugPrint("")	for k,v in pairs(_G.kwk_firstPageOfChapter) do		chaps = chaps .. ", " .. v	end	chaps = chaps .. "."	statusreport.debugPrint(chaps)end--if-- Sets whether they can see the clock etc.display.setStatusBar( display.HiddenStatusBar ) -- vs. display.setStatusBar( display.DefaultStatusBar ) _G.lang = "" kBidi = false kAutoPlay = 0local path = system.pathForFile( "SpoonAndTheMoonPart1.txt", system.CachesDirectory ) local file = io.open( path, "r" ) _G.kwk_currentPage = _G.kwk_firstPageif file then 	local kBookmark = 0	bookmarkedPage = file:read("*number") 	if type(bookmarkedPage) == "number" and bookmarkedPage >= _G.kwk_firstPage and bookmarkedPage <= _G.kwk_lastPage then kBookmark = 1 end	if _G.kwk_ShowDebugOutput then		statusreport.debugPrint("Bookmark file exists!")		statusreport.debugPrint("Starting page: " .. bookmarkedPage)		statusreport.debugPrint("Is it legit: " .. kBookmark .. " - " .. type(bookmarkedPage))	end	if kBookmark > 0 then _G.kwk_currentPage = bookmarkedPage end 	io.close(file) else 	statusreport.debugPrint("Bookmark file does not exist yet!")	local file = io.open( path, "w+b" ) 	file:write( "1" ) 	io.close(file) end --Create a main grouplocal mainGroup = display.newGroup()-- Main functionlocal function main()	-- Add the group from Director calls	-- local navigation_audio = audio.loadSound(audioDir .. "indexflip.mp3", system.ResourceDirectory)	mainGroup:insert(director.directorView)	 -- This is how Corona knows to begin with page_1.lua	if _G.kwk_ShowDebugOutput then		statusreport.debugPrint("")		statusreport.debugPrint("Opening first page from main().")		statusreport.debugPrint("Current page would be: " .. _G.kwk_currentPage)	end--if	if _G.kwk_ShowDebugOutput then _G.kwk_currentPage = 2 end --go to menu	director:changeScene("page_" .. _G.kwk_currentPage)	return trueend--Clear timers and transitionstimerStash = {}transitionStash = {}gtStash = {}function cancelAllSounds()	local i	for i = 1, 32, 1 do		isChannelPlaying = audio.isChannelPlaying(i) 		if isChannelPlaying then audio.stop(i) end		isChannelActive = audio.isChannelActive(i) 		if isChannelActive then audio.dispose(i) end	end--for-loopend--function end-all-soundsfunction cancelAllTimers()		local k, v		for k,v in pairs(timerStash) do				timer.cancel( v )				v = nil; k = nil		end		timerStash = nil		timerStash = {}endfunction cancelAllTransitions()		local k, v		for k,v in pairs(transitionStash) do				transition.cancel( v )				v = nil; k = nil		end		transitionStash = nil		transitionStash = {}end--cancel all gtweensfunction cancelAllTweens()		local k, v		for k,v in pairs(gtStash) do				v:pause();				v = nil; k = nil		end		gtStash = nil		gtStash = {}end--[[function pageTurner(event)	local spacer = 40 	if event.phase =="began" then		print("Begin Swipe: (" .. event.xStart .. ", " .. event.yStart .. ").")	end 	if event.phase =="moved" then		print("Swipe to: (" .. event.x .. ", " .. event.y .. ").")	end 	if event.phase =="ended" then 		print("Ended Swipe! Horizontal movement: " .. event.xStart - event.x)		if event.xStart < event.x and (event.x - event.xStart) >= spacer then 			if ( _G.kwk_currentPage > 1) then 				print("GO LEFT: FROM " .. event.xStart .. " to " .. event.x .. ", length " .. event.xStart-event.x)				cancelAllSounds()				cancelAllTimers()				cancelAllTweens()				cancelAllTransitions()				_G.kwk_currentPage = _G.kwk_currentPage - 1				director:changeScene( "page_" .. _G.kwk_currentPage, "moveFromLeft") 			end 		elseif event.xStart > event.x and (event.xStart-event.x) >= spacer then 			if ( _G.kwk_currentPage <  _G.kwk_lastPage) then 				print("GO RIGHT: FROM " .. event.xStart .. " to " .. event.x .. ", length " .. event.xStart-event.x)				cancelAllSounds()				cancelAllTimers()				cancelAllTweens()				cancelAllTransitions()				_G.kwk_currentPage = _G.kwk_currentPage + 1				director:changeScene( "page_" .. _G.kwk_currentPage, "moveFromRight") 			end 		end 	end end --BG:addEventListener("touch", flip) --]]main()