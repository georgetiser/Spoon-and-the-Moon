-- Code created by Kwik - Copyright: kwiksher.com -- Version: 2.4.6 module(..., package.seeall) function new() 	-- The following sets the development-label settings	-- (bottom of this page)	local FileForIntroMovie = "movie_bookintro.mp4"	local menuGroup = display.newGroup() 	local dispose 	local _W = display.contentWidth; 	local _H = display.contentHeight; 	-- Audio callings 	local HeyDiddle64 = audio.loadStream(audioDir .. "heydiddle64.mp3", system.ResourceDirectory) 	local drawScreen = function()		statusreport.debugPrint("----------------"); statusreport.debugPrint(""); statusreport.debugPrint("New Page") 		statusreport.debugPrint("The current page is: " .. _G.kwk_currentPage) 		math.randomseed(os.time()) 		navigation.DisplayDevelopmentVersion()		local BG		local kwkBforward			-- (TOP) External code will render here 		-- BG positioning 		BG = display.newImageRect(imageDir .. "p1_bg.png", 768, 1024 ); 		BG.x = 384; BG.y = 512; BG.alpha = 1; BG.oldAlpha = 1 --		BG.oriX = BG.x; BG.oriY = BG.y 		BG.name = "BG" 		menuGroup:insert(1, BG); menuGroup.BG = BG 		local function onintroshowEvent(event) 			but_introshow_998(introshow) 			return true 		end 		local onkwkBforwardTouch = function(event) 			if event.phase=="ended" then  				local transEffect = "fade"				local playIntroVid = function()					statusreport.debugPrint("IntroVid -> Play Video")					media.playVideo( FileForIntroMovie, system.ResourceDirectory, false ) 				end--function-play-movie				local myClosure_switch = function() 					statusreport.debugPrint("Closure -> Change Scene")					disposeEverything() 					_G.kwk_currentPage = _G.kwk_menuPage					director:changeScene( "page_" .. _G.kwk_currentPage, transEffect ) 				end--function-change-page				local myTimer_switch = function()					--movie didn't play					statusreport.debugPrint("Timer Expired -> Begin Closure")					_G.kwk_fadeaway = false					transEffect = "fade"					myClosure_switch()				end--function-movie-failed				local myEnder_switch = function()					--movie played and ended					statusreport.debugPrint("Movie Ended -> Begin Closure")					_G.kwk_fadeaway = true					transEffect = nil					myClosure_switch()				end--function-movie-ended				local fadeTime = 500				transitionStash.newTransition_aa = nil				transitionStash.newTransition_aa = transition.to( BG, {alpha=0, time=fadeTime, delay=0}) 				transitionStash.newTransition_bb = nil				transitionStash.newTransition_bb = transition.to( kwkBforward, {alpha=0, time=fadeTime/2, delay=fadeTime/2}) 				timerStash.newTimer_cc = nil				timerStash.newTimer_cc = timer.performWithDelay(fadeTime, playIntroVid, 1, myEnder_switch) 				timerStash.newTimer_dd = nil				timerStash.newTimer_dd = timer.performWithDelay(fadeTime + 1, myTimer_switch, 1) 			end --if-ended 		end --function-forward-touch		kwkBforward = display.newImageRect(imageDir .. "kwkBforward.png", 111, 87 ) 		kwkBforward.x = 475; kwkBforward.y = 971; kwkBforward.alpha = 1; kwkBforward.oldAlpha = 1 		kwkBforward.name = "kwkBforward" 		menuGroup:insert(kwkBforward)		menuGroup.kwkBforward = kwkBforward 		kwkBforward:addEventListener("touch", onkwkBforwardTouch ) 		dispose = function(event) 			cancelAllSounds()			cancelAllTimers()			cancelAllTransitions() 			audio.stop(32); audio.dispose(HeyDiddle64); HeyDiddle64 = nil 		end 	end --function-drawscreen	drawScreen() 	local myPlaySong = function() 		if environment == "simulator" then			audio.play(HeyDiddle64, {	channel=32, loops=0, fadein=2500 } ) 		else			audio.play(HeyDiddle64, {	channel=32, loops=0, fadein=500 } ) 		end	end--function heydiddle	timerStash.newTimer_introSong = nil	timerStash.newTimer_introSong = timer.performWithDelay(0, myPlaySong, 1) 	return menuGroup end 